#!/usr/bin/env python

from collections import defaultdict
from json import dumps
from re import compile as recompile
from os import walk
from os.path import join
from sys import argv

base_dir = argv[ 1 ]
exercise_names = frozenset( argv[ 2 ].split( ',' ) )

SOURCES_PATTERN = recompile( join( base_dir, r'(?P<uid>.*)/(?P<source>(?P<exercise>.*)\.java)' ) )

res = defaultdict( lambda : defaultdict( lambda : defaultdict( lambda : defaultdict( lambda : defaultdict( lambda : dict ) ) ) ) )
for root, dirs, files in walk( base_dir ):
	for name in files:
		path = join( root, name )
		match = SOURCES_PATTERN.match( path )
		if match:
			s = match.groupdict()
			if s[ 'exercise' ] not in exercise_names: continue
			with open( path, 'r' ) as f: exercise_text = f.read()
			res[ s[ 'uid' ] ][ 'exercises' ][ s[ 'exercise' ] ] = {
				'sources': { s[ 'source']: exercise_text }, 'cases': []
			}

for uid, rest in res.items():
	res[ uid ][ 'signature' ] = [ uid, uid, '' ]
	for exercise in exercise_names:
		if exercise not in res[ uid ][ 'exercises' ]:
			res[ uid ][ 'exercises' ][ exercise ] = { 'sources': {}, 'cases': [] }

print dumps( res.values() )
